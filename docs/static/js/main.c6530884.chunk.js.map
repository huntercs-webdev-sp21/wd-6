{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","randomChar","String","fromCharCode","Math","floor","random","App","useState","body","setBody","secretIndex","setSecretIndex","secrets","setSecrets","search","setSearch","result","setResult","deleteSecret","index","axios","delete","name","then","tmp","i","length","push","catch","e","console","log","className","placeholder","value","onChange","target","onClick","get","data","secretName","secret","post","createSecret","put","updateSecret","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6530884.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport './App.css';\n\n// API documentation: https://documenter.getpostman.com/view/3281832/SzmZeMLC\nconst BASE_URL = 'https://getpantry.cloud/apiv1/pantry/ecf03d36-db58-4d1f-b2d2-be3de4515084/basket/';\n\nconst randomChar = () => String.fromCharCode(Math.floor(97 + Math.random() * 26));\n\nfunction App() {\n  const [body, setBody] = useState('');\n  const [secretIndex, setSecretIndex] = useState(-1);\n  const [secrets, setSecrets] = useState([]);\n  const [search, setSearch] = useState('');\n  const [result, setResult] = useState([]);\n\n  const getAllSecrets = () => {\n    axios.get('https://getpantry.cloud/apiv1/pantry/ecf03d36-db58-4d1f-b2d2-be3de4515084')\n      .then((data) => console.log(data));\n  }\n\n  const createSecret = () => {\n    // four random chars as name\n    const secretName = randomChar() + randomChar() + randomChar() + randomChar();\n    const secret = { name: secretName, body: body };\n    axios.post(BASE_URL + secretName, secret)\n      .then(() => {\n        setSecrets([...secrets, secret]);\n        setBody('');\n      })\n      .catch(() => console.log('create failure'));\n  }\n\n  const updateSecret = () => {\n    const secret = {name: secrets[secretIndex].name, body: body};\n    axios.put(BASE_URL + secrets[secretIndex].name, secret)\n      .then(() => {\n        secrets[secretIndex].body = body;\n        setSecrets([...secrets]);\n        setSecretIndex(-1);\n        setBody('');\n      })\n      .catch(() => console.log('edit failure'));\n  }\n\n  const deleteSecret  = index  => () =>  {\n    axios.delete(BASE_URL + secrets[index].name)\n      .then(() =>{\n        let tmp = [];\n        for(let i = 0; i < secrets.length; i++){\n          if(i !== index){tmp.push(secrets[i]);}\n        }\n        setSecrets(tmp);\n        setSecretIndex(-1);\n        setBody('');\n      })\n      .catch((e) => console.log(e));\n  }\n\n\n  const onSave = () => {\n    if (secretIndex < 0) {\n      createSecret();\n    } else {\n      updateSecret();\n    }\n  }\n\n  const editSecret = index => () => {\n    setSecretIndex(index);\n  }\n\n  const cancelEdit = () => {\n    setSecretIndex(-1);\n    setBody('');\n  }\n\n  const onSearch = () => {\n    //getAllSecrets();\n    axios.get(BASE_URL + search)\n      .then((data) =>{\n        console.log(data);\n        setResult(data.data);\n        console.log(result);\n        console.log(result.name);\n        console.log(result.body);\n      })\n      .catch( () => {\n        console.log(\"No Results!\");\n        setResult([]);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Secrets Locker</h1>\n      <p className=\"description\">\n        This is a shared secrets locker.\n        Anyone else can come to this page and access a secret given the secret name.\n        Only you can edit your secrets as long as you are on this page.\n        Secrets remain unless you delete them manually.\n      </p>\n      {/* read */}\n      <h2 className=\"header\">Get data:</h2>\n      <textarea placeholder=\"Name\" value={search} onChange={e => setSearch(e.target.value)} />\n      <button onClick={onSearch}>Search</button>\n      {result.length === 0\n       ? \"No Results\"\n       :\n       <div className=\"secret container\">\n         <h4>{result.name}</h4>\n         <p>{result.body}</p>\n       </div>\n      }\n      {/* create/update/delete */}\n      <h2 className=\"header\">Manage data:</h2>\n      <h3 className=\"header\">\n        {secretIndex < 0 ? 'Create New:' : `Edit secret '${secrets[secretIndex].name}':`}\n      </h3>\n      <textarea placeholder=\"Data\" value={body} onChange={e => setBody(e.target.value)} />\n      <button onClick={onSave}>Save</button>\n      {secretIndex >= 0 && (<button onClick={cancelEdit}>Cancel edit</button>)}\n\n      <h3 className=\"header\">Update/Delete:</h3>\n      {\n        secrets.map((secret, i) => (\n          <div key={secret.name} className=\"secret container\">\n            <h4>{secret.name}</h4>\n            <p>{secret.body}</p>\n            <button onClick={editSecret(i)}>Edit</button>\n            <button onClick={deleteSecret(i)}>Delete</button>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}